generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(cuid())
  email      String    @unique
  password   String
  name       String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  isApproved Boolean   @default(false)
  role       Role      @default(PENDING)
  posts      Post[]
  products   Product[]
  videos     Video[]
  seoIndexingLogs SeoIndexingLog[]
}

model PostCategory {
  id              String            @id @default(cuid())
  title           String
  description     String?
  thumbnail       String?
  slug            String            @unique
  seoTitle        String?
  seoDescription  String?
  seoKeywords     String?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  posts           Post[]            @relation("CategoryToPosts")
  subcategories   PostSubCategory[] @relation("CategoryToSubCategory")
  childCategories PostSubCategory[] @relation("ParentToChild")
}

model PostSubCategory {
  id               String        @id @default(cuid())
  title            String
  description      String?
  thumbnail        String?
  slug             String        @unique
  seoTitle         String?
  seoDescription   String?
  seoKeywords      String?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  categoryId       String
  parentCategoryId String?
  posts            Post[]        @relation("SubCategoryToPosts")
  category         PostCategory  @relation("CategoryToSubCategory", fields: [categoryId], references: [id])
  parentCategory   PostCategory? @relation("ParentToChild", fields: [parentCategoryId], references: [id])

  @@index([categoryId])
  @@index([parentCategoryId])
}

model Post {
  id             String           @id @default(cuid())
  title          String
  slug           String           @unique
  excerpt        String?
  content        String
  thumbnail      String?
  published      Boolean          @default(false)
  categoryId     String
  subcategoryId  String?
  tags           String[]
  seoTitle       String?
  seoDescription String?
  seoKeywords    String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  authorId       String
  author         User             @relation(fields: [authorId], references: [id])
  category       PostCategory     @relation("CategoryToPosts", fields: [categoryId], references: [id])
  subcategory    PostSubCategory? @relation("SubCategoryToPosts", fields: [subcategoryId], references: [id])

  @@index([categoryId])
  @@index([subcategoryId])
  @@index([authorId])
}

model Video {
  id             String   @id @default(cuid())
  title          String
  slug           String   @unique
  description    String?
  youtubeUrl     String
  seoTitle       String?
  seoDescription String?
  seoKeywords    String?
  published      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  authorId       String
  author         User     @relation(fields: [authorId], references: [id])

  @@index([authorId])
}

model ProductCategory {
  id              String               @id @default(cuid())
  title           String
  description     String?
  thumbnail       String?
  slug            String               @unique
  type            String?              @default("DIGITAL")
  seoTitle        String?
  seoDescription  String?
  seoKeywords     String?
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt
  products        Product[]            @relation("CategoryToProducts")
  subcategories   ProductSubCategory[] @relation("CategoryToSubCategory")
  childCategories ProductSubCategory[] @relation("ParentToChild")
}

model ProductSubCategory {
  id               String           @id @default(cuid())
  title            String
  description      String?
  thumbnail        String?
  slug             String           @unique
  seoTitle         String?
  seoDescription   String?
  seoKeywords      String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  categoryId       String
  parentCategoryId String?
  category         ProductCategory  @relation("CategoryToSubCategory", fields: [categoryId], references: [id])
  parentCategory   ProductCategory? @relation("ParentToChild", fields: [parentCategoryId], references: [id])

  @@index([categoryId])
  @@index([parentCategoryId])
}

model Product {
  id            String          @id @default(cuid())
  title         String
  slug          String          @unique
  description   String
  type          ProductType
  price         Float
  salePrice     Float?
  thumbnail     String?
  gallery       String[]
  digitalAssets String[]
  stock         Int?            @default(0)
  published     Boolean         @default(false)
  featured      Boolean         @default(false)
  categoryId    String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  authorId      String
  author        User            @relation(fields: [authorId], references: [id])
  category      ProductCategory @relation("CategoryToProducts", fields: [categoryId], references: [id])
  bundledIn     Bundle[]        @relation("BundleIncludes")
  bundles       Bundle[]        @relation("BundleProducts")

  @@index([categoryId])
  @@index([authorId])
}

model Bundle {
  id          String    @id @default(cuid())
  title       String
  slug        String    @unique
  description String
  price       Float
  salePrice   Float?
  thumbnail   String?
  published   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  includedIn  Product[] @relation("BundleIncludes")
  products    Product[] @relation("BundleProducts")

  @@index([slug])
}

model SiteSettings {
  id                     String   @id @default(cuid())
  siteName               String?
  siteTitle              String?
  siteDescription        String?
  siteKeywords           String?
  ogTitle                String?
  ogDescription          String?
  ogImage                String?
  twitterHandle          String?
  twitterCardType        String?
  organizationName       String?
  organizationLogo       String?
  contactEmail           String?
  contactPhone           String?
  contactAddress         String?
  googleAnalyticsId      String?
  googleSiteVerification String?
  robotsTxt              String?
  sitemapXml             String?
  favicon                String?
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
}

model Subscriber {
  id             String              @id @default(cuid())
  email          String              @unique
  firstName      String?
  lastName       String?
  status         SubscriberStatus    @default(ACTIVE)
  confirmedAt    DateTime?
  unsubscribedAt DateTime?
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  campaigns      CampaignRecipient[]
}

model EmailTemplate {
  id        String     @id @default(cuid())
  name      String
  subject   String
  content   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  campaigns Campaign[]
}

model Campaign {
  id         String              @id @default(cuid())
  name       String
  subject    String
  content    String
  status     CampaignStatus      @default(DRAFT)
  templateId String?
  sentAt     DateTime?
  createdAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt
  template   EmailTemplate?      @relation(fields: [templateId], references: [id])
  recipients CampaignRecipient[]

  @@index([templateId])
}

model CampaignRecipient {
  id           String     @id @default(cuid())
  campaignId   String
  subscriberId String
  status       SendStatus @default(PENDING)
  sentAt       DateTime?
  openedAt     DateTime?
  clickedAt    DateTime?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  campaign     Campaign   @relation(fields: [campaignId], references: [id])
  subscriber   Subscriber @relation(fields: [subscriberId], references: [id])

  @@index([campaignId])
  @@index([subscriberId])
}

model EmailConfig {
  id        String        @id @default(cuid())
  provider  EmailProvider
  apiKey    String
  fromEmail String
  fromName  String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model SeoIndexingLog {
  id        String   @id @default(cuid())
  urls      String[]
  type      String
  results   Json
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StaticPageSeo {
  id                  String   @id @default(cuid())
  path                String   @unique
  title               String?
  description         String?
  keywords            String?
  ogTitle             String?
  ogDescription       String?
  ogImage             String?
  twitterTitle        String?
  twitterDescription  String?
  twitterImage        String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

enum ProductType {
  DIGITAL
  PHYSICAL
}

enum SubscriberStatus {
  PENDING
  ACTIVE
  UNSUBSCRIBED
}

enum CampaignStatus {
  DRAFT
  SCHEDULED
  SENDING
  SENT
  FAILED
}

enum SendStatus {
  PENDING
  SENT
  FAILED
  OPENED
  CLICKED
}

enum EmailProvider {
  SENDGRID
  ELASTIC_EMAIL
}

enum Role {
  SUPER_ADMIN
  ADMIN
  MANAGER
  WRITER
  PENDING
}
